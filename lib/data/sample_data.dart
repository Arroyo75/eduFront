import 'package:flutter/material.dart';
import '../models/technology.dart';
import '../models/section.dart';

class SampleData {
  static List<Technology> getTechnologies() {
    return [
      Technology(
        id: 'html',
        name: 'HTML',
        description: 'The foundation of web pages',
        icon: Icons.code,
        gradientColors: [
          const Color(0xFFE34F26),
          const Color(0xFFFF6B47),
        ],
        sections: _getHtmlSections(),
      ),
      Technology(
        id: 'css',
        name: 'CSS',
        description: 'Styling and layout for the web',
        icon: Icons.palette,
        gradientColors: [
          const Color(0xFF1572B6),
          const Color(0xFF33A9DC),
        ],
        sections: _getCssSections(),
        prerequisites: ['HTML'],
        isLocked: false, // Unlocked for testing
      ),
      Technology(
        id: 'javascript',
        name: 'JavaScript',
        description: 'Programming language of the web',
        icon: Icons.flash_on,
        gradientColors: [
          const Color(0xFFF7DF1E),
          const Color(0xFFFFE066),
        ],
        sections: _getJavaScriptSections(),
        prerequisites: ['HTML', 'CSS'],
        isLocked: true,
      ),
      Technology(
        id: 'react',
        name: 'React',
        description: 'A JavaScript library for building UIs',
        icon: Icons.hub,
        gradientColors: [
          const Color(0xFF61DAFB),
          const Color(0xFF21232A),
        ],
        sections: _getReactSections(),
        prerequisites: ['JavaScript'],
        isLocked: true,
      ),
      Technology(
        id: 'vue',
        name: 'Vue.js',
        description: 'The progressive JavaScript framework',
        icon: Icons.view_in_ar,
        gradientColors: [
          const Color(0xFF4FC08D),
          const Color(0xFF34495E),
        ],
        sections: _getVueSections(),
        prerequisites: ['JavaScript'],
        isLocked: true,
      ),
      Technology(
        id: 'angular',
        name: 'Angular',
        description: 'Platform for building mobile and desktop apps',
        icon: Icons.architecture,
        gradientColors: [
          const Color(0xFFDD0031),
          const Color(0xFFC3002F),
        ],
        sections: _getAngularSections(),
        prerequisites: ['JavaScript'],
        isLocked: true,
      ),
    ];
  }

  static List<Section> _getHtmlSections() {
    return [
      Section(
        id: 'html-basics',
        title: 'HTML Basics',
        description: 'Learn the fundamentals of HTML structure and syntax',
        totalLessons: 6,
        completedLessons: 0,
        finalTestCompleted: false,
        icon: Icons.article,
        estimatedTime: const Duration(hours: 2),
      ),
      Section(
        id: 'html-elements',
        title: 'HTML Elements',
        description: 'Master common HTML elements and their usage',
        totalLessons: 8,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        icon: Icons.widgets,
        estimatedTime: const Duration(hours: 3),
      ),
      Section(
        id: 'html-forms',
        title: 'Forms & Input',
        description: 'Create interactive forms and handle user input',
        totalLessons: 7,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['HTML Elements'],
        icon: Icons.input,
        estimatedTime: const Duration(hours: 2, minutes: 30),
      ),
      Section(
        id: 'html-semantic',
        title: 'Semantic HTML',
        description: 'Use semantic elements for better accessibility',
        totalLessons: 5,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['HTML Elements'],
        icon: Icons.accessibility,
        estimatedTime: const Duration(hours: 1, minutes: 30),
      ),
    ];
  }

  static List<Section> _getCssSections() {
    return [
      Section(
        id: 'css-intro',
        title: 'Introduction to CSS',
        description: 'Learn CSS syntax, selectors, and how to style HTML',
        totalLessons: 8,
        completedLessons: 0,
        finalTestCompleted: false,
        icon: Icons.brush,
        estimatedTime: const Duration(hours: 3),
      ),
      Section(
        id: 'css-properties',
        title: 'CSS Properties',
        description: 'Master essential CSS properties for styling',
        totalLessons: 12,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: false,
        prerequisites: ['Introduction to CSS'],
        icon: Icons.settings,
        estimatedTime: const Duration(hours: 4),
      ),
      Section(
        id: 'css-intermediate',
        title: 'Intermediate CSS',
        description: 'Box model, positioning, and layout techniques',
        totalLessons: 10,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: false,
        prerequisites: ['CSS Properties'],
        icon: Icons.layers,
        estimatedTime: const Duration(hours: 4, minutes: 30),
      ),
      Section(
        id: 'css-advanced',
        title: 'Advanced CSS',
        description: 'Advanced selectors, pseudo-classes, and methodologies',
        totalLessons: 9,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: false,
        prerequisites: ['Intermediate CSS'],
        icon: Icons.auto_awesome,
        estimatedTime: const Duration(hours: 3, minutes: 30),
      ),
      Section(
        id: 'css-flexbox',
        title: 'Flexbox',
        description: 'Master flexible layout with CSS Flexbox',
        totalLessons: 2, // Updated to 2 lessons
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: false, // Unlocked for testing
        prerequisites: [], // No prerequisites for testing
        icon: Icons.view_column,
        estimatedTime: const Duration(minutes: 20), // Reduced time
      ),
      Section(
        id: 'css-grid',
        title: 'CSS Grid',
        description: 'Create complex layouts with CSS Grid',
        totalLessons: 10,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Flexbox'],
        icon: Icons.grid_view,
        estimatedTime: const Duration(hours: 4),
      ),
      Section(
        id: 'css-animations',
        title: 'Animations & Transitions',
        description: 'Bring your designs to life with CSS animations',
        totalLessons: 7,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['CSS Grid'],
        icon: Icons.animation,
        estimatedTime: const Duration(hours: 2, minutes: 30),
      ),
      Section(
        id: 'css-sass',
        title: 'Sass',
        description: 'Write better CSS with the Sass preprocessor',
        totalLessons: 6,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Animations & Transitions'],
        icon: Icons.code_off,
        estimatedTime: const Duration(hours: 2),
      ),
      Section(
        id: 'css-bootstrap',
        title: 'Bootstrap',
        description: 'Rapid development with Bootstrap framework',
        totalLessons: 8,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Sass'],
        icon: Icons.dashboard,
        estimatedTime: const Duration(hours: 3),
      ),
      Section(
        id: 'css-tailwind',
        title: 'Tailwind',
        description: 'Rapid development with Tailwind framework',
        totalLessons: 8,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Bootstrap'],
        icon: Icons.wind_power,
        estimatedTime: const Duration(hours: 3),
      ),
      Section(
        id: 'css-material3',
        title: 'Material3',
        description: 'Rapid development with Material3 framework',
        totalLessons: 8,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Tailwind'],
        icon: Icons.golf_course,
        estimatedTime: const Duration(hours: 3),
      ),
      Section(
        id: 'css-styles',
        title: 'Style Frameworks',
        description: 'Style Frameworks Comparison',
        totalLessons: 8,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Material3'],
        icon: Icons.style,
        estimatedTime: const Duration(hours: 3),
      ),
    ];
  }

  static List<Section> _getJavaScriptSections() {
    return [
      Section(
        id: 'js-basics',
        title: 'JavaScript Fundamentals',
        description: 'Variables, data types, and basic syntax',
        totalLessons: 10,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        icon: Icons.code,
        estimatedTime: const Duration(hours: 4),
      ),
      Section(
        id: 'js-functions',
        title: 'Functions & Scope',
        description: 'Master functions, closures, and scope',
        totalLessons: 8,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['JavaScript Fundamentals'],
        icon: Icons.functions,
        estimatedTime: const Duration(hours: 3),
      ),
      Section(
        id: 'js-dom',
        title: 'DOM Manipulation',
        description: 'Interact with web pages using the DOM',
        totalLessons: 12,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Functions & Scope'],
        icon: Icons.web,
        estimatedTime: const Duration(hours: 4, minutes: 30),
      ),
      Section(
        id: 'js-async',
        title: 'Asynchronous JavaScript',
        description: 'Promises, async/await, and API calls',
        totalLessons: 9,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['DOM Manipulation'],
        icon: Icons.sync,
        estimatedTime: const Duration(hours: 3, minutes: 30),
      ),
      Section(
        id: 'js-es6',
        title: 'Modern JavaScript (ES6+)',
        description: 'Arrow functions, destructuring, modules, and more',
        totalLessons: 11,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Asynchronous JavaScript'],
        icon: Icons.update,
        estimatedTime: const Duration(hours: 4),
      ),
    ];
  }

  static List<Section> _getReactSections() {
    return [
      Section(
        id: 'react-intro',
        title: 'React Fundamentals',
        description: 'Components, JSX, and React basics',
        totalLessons: 10,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        icon: Icons.hub,
        estimatedTime: const Duration(hours: 4),
      ),
      Section(
        id: 'react-hooks',
        title: 'React Hooks',
        description: 'useState, useEffect, and custom hooks',
        totalLessons: 12,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['React Fundamentals'],
        icon: Icons.anchor,
        estimatedTime: const Duration(hours: 5),
      ),
      Section(
        id: 'react-routing',
        title: 'React Router',
        description: 'Navigation and routing in React apps',
        totalLessons: 8,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['React Hooks'],
        icon: Icons.route,
        estimatedTime: const Duration(hours: 3),
      ),
      Section(
        id: 'react-state',
        title: 'State Management',
        description: 'Context API, Redux, and state patterns',
        totalLessons: 14,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['React Router'],
        icon: Icons.storage,
        estimatedTime: const Duration(hours: 6),
      ),
    ];
  }

  static List<Section> _getVueSections() {
    return [
      Section(
        id: 'vue-basics',
        title: 'Vue.js Fundamentals',
        description: 'Templates, directives, and component basics',
        totalLessons: 9,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        icon: Icons.view_in_ar,
        estimatedTime: const Duration(hours: 3, minutes: 30),
      ),
      Section(
        id: 'vue-components',
        title: 'Vue Components',
        description: 'Props, events, and component communication',
        totalLessons: 11,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Vue.js Fundamentals'],
        icon: Icons.widgets,
        estimatedTime: const Duration(hours: 4),
      ),
      Section(
        id: 'vue-router',
        title: 'Vue Router',
        description: 'Client-side routing with Vue Router',
        totalLessons: 7,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Vue Components'],
        icon: Icons.navigation,
        estimatedTime: const Duration(hours: 2, minutes: 30),
      ),
      Section(
        id: 'vue-vuex',
        title: 'Vuex State Management',
        description: 'Centralized state management with Vuex',
        totalLessons: 10,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Vue Router'],
        icon: Icons.account_tree,
        estimatedTime: const Duration(hours: 4),
      ),
    ];
  }

  static List<Section> _getAngularSections() {
    return [
      Section(
        id: 'angular-basics',
        title: 'Angular Fundamentals',
        description: 'Components, templates, and Angular CLI',
        totalLessons: 12,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        icon: Icons.architecture,
        estimatedTime: const Duration(hours: 5),
      ),
      Section(
        id: 'angular-services',
        title: 'Services & Dependency Injection',
        description: 'Creating and using services in Angular',
        totalLessons: 9,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Angular Fundamentals'],
        icon: Icons.miscellaneous_services,
        estimatedTime: const Duration(hours: 3, minutes: 30),
      ),
      Section(
        id: 'angular-routing',
        title: 'Angular Router',
        description: 'Navigation and routing in Angular apps',
        totalLessons: 10,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Services & Dependency Injection'],
        icon: Icons.alt_route,
        estimatedTime: const Duration(hours: 4),
      ),
      Section(
        id: 'angular-forms',
        title: 'Angular Forms',
        description: 'Template-driven and reactive forms',
        totalLessons: 11,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Angular Router'],
        icon: Icons.dynamic_form,
        estimatedTime: const Duration(hours: 4, minutes: 30),
      ),
      Section(
        id: 'angular-http',
        title: 'HTTP & Observables',
        description: 'Making API calls and handling data streams',
        totalLessons: 8,
        completedLessons: 0,
        finalTestCompleted: false,
        isLocked: true,
        prerequisites: ['Angular Forms'],
        icon: Icons.http,
        estimatedTime: const Duration(hours: 3),
      ),
    ];
  }
}